import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id "net.thauvin.erik.gradle.semver" version "1.0.4"
}

group 'net.forthecrown'

compileJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()

    maven { url = 'https://papermc.io/repo/repository/maven-public/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/'}
    maven { url = 'https://maven.enginehub.org/repo/' }
    maven { url = 'https://jitpack.io' }
    maven { url = "https://mvn.intellectualsites.com/content/repositories/releases/" }
}

dependencies {
    implementation 'org.jetbrains:annotations:19.0.0'

    compileOnly 'com.github.lucko:LuckPerms:5.3'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.5-SNAPSHOT'

    compileOnly 'com.fastasyncworldedit:FAWE-Bukkit:1.17-15'
    compileOnly 'com.fastasyncworldedit:FAWE-Core:1.17-15'

    compileOnly files(libJar('Paper'))
    compileOnly files(libJar('Grenadier'))
    compileOnly files(libJar('Squire'))
}

static String libJar(String s) {
    return '/libs/' + s + '.jar'
}

//Does the building and remapping all in one click of a button. :DDDDD
tasks.register('remap', Copy) {
    it.dependsOn(build)
    it.from "$buildDir/libs" into "/remapping"

    it.doLast {
        exec {
            workingDir '/remapping'
            commandLine 'cmd', '/c', 'remap.bat'
        }
    }
}

processResources {
    File pluginYml = new File('build/resources/main/plugin.yml')
    if(pluginYml.exists()) pluginYml.delete()

    File ff = new File('version.properties')
    if(!ff.exists()){ //XD, automatic versioning can suck my ass... making me write java in the fucking gradle file
        System.out.println(ff.getPath())
    } else {
        String f = ff.text
        String versionText = f.substring(f.indexOf("version.semver=")+"version.semver=".length(), f.lastIndexOf("version")-1)

        filter(ReplaceTokens, tokens: [version: versionText])
    }
}